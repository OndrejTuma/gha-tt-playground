name: Integration tests Workflow

env:
  # In monorepo if you want to run integration tests only for
  # specific subset of packages, define them in PARALLEL_MATRIX below
  # You can specify how many instances you want to run for package in parallel_groups field
  PARALLEL_MATRIX: |
    [
      {
        "pkg": "@gha-tt-playground/bar",
        "location": "packages/bar",
        "parallel_groups": 3
      }
    ]
  PARALLEL_GROUPS: 2
  PRINT_COVERAGE: true
  COVERAGE_REPORT_DIR: ./coverage
  COVERAGE_REPORTER: text-summary
  COMMAND: test:integration:ci
  NPM_TOKEN: ${{ secrets.NPM_TOKEN_READ_ONLY }}
  GITHUB_TOKEN: ${{ secrets.TOPTAL_DEVBOT_TOKEN }}

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches: [master, main]

jobs:
  create_matrix:
    name: Create:Matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout davinci GHAs
        uses: actions/checkout@v2
#        with:
#          repository: toptal/davinci-github-actions
#          token: ${{ env.GITHUB_TOKEN }}
#          # remove when merged
#          ref: gha/add-create-matrix-action
#          path: ./.github/actions/

      - name: Run Matrix
        id: set-matrix
        uses: ./.github/actions/integration-tests-matrix
        with:
          parallel_groups: ${{ env.PARALLEL_GROUPS }}
          parallel_matrix: ${{ env.PARALLEL_MATRIX }}

      - run: echo ${{ fromJSON(steps.set-matrix.outputs.matrix) }}

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      isMonorepo: ${{ steps.set-matrix.outputs.isMonorepo }}

  integration_check:
    name: Check:IntegrationTests
    runs-on: ubuntu-latest
    needs: create_matrix
    strategy:
      matrix: ${{ fromJson(needs.create_matrix.outputs.matrix) }}
    env:
      GROUP_INDEX: ${{ matrix.index }}
      GROUP_LOCATION: ${{ matrix.location }}
      GROUP_PACKAGE: ${{ matrix.pkg }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2

      - name: Set integration test command
        id: set-command
        run: |
          echo "::set-output name=command::yarn${{ needs.create_matrix.outputs.isMonorepo == 'true' && format(' {0} {1}', 'workspace', env.GROUP_PACKAGE) || ''}} ${{ env.COMMAND }}"

      - name: Set parsed package
        if: ${{ env.PRINT_COVERAGE == 'true' }}
        id: parsed-package
        run: echo "::set-output name=package::${GROUP_PACKAGE////-}"

      - name: Set coverage filename
        if: ${{ env.PRINT_COVERAGE == 'true' }}
        id: coverage-filename
        run: |
          echo "::set-output name=name::out.${{ needs.create_matrix.outputs.isMonorepo == 'true' && format('{0}.{1}', steps.parsed-package.outputs.package, env.GROUP_INDEX) || env.GROUP_INDEX }}.json"

#      - name: Checkout davinci GHAs
#        uses: actions/checkout@v2
#        with:
#          repository: toptal/davinci-github-actions
#          token: ${{ env.GITHUB_TOKEN }}
#          # remove when merged
#          ref: gha/add-create-matrix-action
#          path: ./.github/actions/

      - uses: ./.github/actions/yarn-install
        with:
          npm_token: ${{ env.NPM_TOKEN }}

      - uses: ./.github/actions/integration-tests
        env:
          PARALLEL_GROUPS: ${{ matrix.total || env.PARALLEL_GROUPS }}
        with:
          command: ${{ steps.set-command.outputs.command }}

      - name: Move coverage output to joint folder
        if: ${{ env.PRINT_COVERAGE == 'true' }}
        run: |
          mkdir integration-coverage
          mv $GROUP_LOCATION/$COVERAGE_REPORT_DIR/coverage-final.json integration-coverage/${{ steps.coverage-filename.outputs.name }}

      - name: Upload Coverage
        if: ${{ env.PRINT_COVERAGE == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: integration-coverage
          path: integration-coverage

  coverage_report:
    name: Report:Coverage
    runs-on: ubuntu-latest
    needs: integration_check
    steps:
      - name: Checkout davinci GHAs
        uses: actions/checkout@v2
#        with:
#          repository: toptal/davinci-github-actions
#          token: ${{ env.GITHUB_TOKEN }}
#          # remove when merged
#          ref: gha/add-create-matrix-action
#          path: ./.github/actions/

      - name: Download Coverage
        if: ${{ env.PRINT_COVERAGE == 'true' }}
        uses: actions/download-artifact@v2
        with:
          name: integration-coverage
          path: integration-coverage

      - name: Merge coverage files
        run: |
          mkdir merged-coverage
          npx nyc merge integration-coverage merged-coverage/coverage.json

      - name: Print Coverage
        if: ${{ env.PRINT_COVERAGE == 'true' }}
        uses: ./.github/actions/cypress-coverage-comment
        with:
          coverage-command: 'npx nyc report --reporter=${{ env.COVERAGE_REPORTER }} --temp-dir=merged-coverage'
